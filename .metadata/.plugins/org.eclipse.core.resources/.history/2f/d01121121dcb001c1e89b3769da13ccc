import LinkedList.Node;

public class Intersection {
	public static Node getIntersectionNode(Node headA, Node headB) {

		if (headA == null || headB == null)
			return null;

		Node a_pointer = headA;
		Node b_pointer = headB;

		while (a_pointer != b_pointer) {
			if (a_pointer == null) {
				a_pointer = headB;
			} else {
				a_pointer = a_pointer.next;

			}
			if (b_pointer == null) {
				b_pointer = headA;
			} else {
				b_pointer = b_pointer.next;

			}
		}
		return a_pointer;

	}

	public static Integer getNodeValue(Node intersectingNode) {
		return intersectingNode.data;

	}
	// Driver code
		public static void main(String[] args) {
			/* Start with the empty list. */
			LinkedList list1 = new LinkedList();
			LinkedList list2 = new LinkedList();

			//
			// ******INSERTION******
			//

			// Insert the values
			list1 = insert(list1, 1);
			list1 = insert(list1, 2);
			list1 = insert(list1, 3);
			list1 = insert(list1, 4);
			list1 = insert(list1, 5);
			list1 = insert(list1, 6);
			list1 = insert(list1, 7);
			list1 = insert(list1, 8);
			// Print the Linkedlist1
			System.out.println("list1:");
			printList(list1);

			System.out.println();
			System.out.println();

			list2 = insert(list2, 8);
			list2 = insert(list2, 7);
			list2 = insert(list2, 6);
			list2.head.next.next.next = list1.head.next.next.next.next;

			// Print the Linkedlist2
			System.out.println("list2:");
			printList(list2);

			System.out.println();
			System.out.println();

			System.out.println("Intersecting node:");
			System.out.println(getNodeValue(getIntersectionNode(list1.head, list2.head)));
		}

}
